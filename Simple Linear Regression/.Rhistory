hist(x, probability = TRUE) # the height of the bar is proportion (or probability)
set.seed(12345)
x <- rnorm(200, 100, 10)
hist(x) # the height of the bar gives you the frequency
hist(x, probability = TRUE) # the height of the bar is proportion (or probability)
par(mfrow = c(1, 2))
hist(x, breaks = 10) # 10 breaks
hist(x, probability = TRUE) # the height of the bar is proportion (or probability)
lines(density(x), lwd = 2, col = "blue") # Kernel Density Estimation
hist(x, breaks = 10, freq = F, col = "gray", main = "Histogram and density estimate",
xlab = "weight")
qqnorm(y)
y <- x[1:40]
qqnorm(y)
qqnorm(y, main = "Normal Q-Q Plot of weight", xlab = "Theoretical Quantiles of weight",
ylab = "Sample Quantiles of weight")
par(mfrow = 1)
par(mfrow = 1,1)
par(mfrow = (
1,1))
qqline(y, col = "red", lwd = 2) # Addding theoretical line
par(mfrow = c(1,1))
qqnorm(y)
set.seed(12345)
x <- rnorm(200, 100, 10)
hist(x) # the height of the bar gives you the frequency
hist(x, probability = TRUE) # the height of the bar is proportion (or probability)
par(mfrow = c(1, 2))
hist(x, breaks = 10) # 10 breaks
lines(density(x), lwd = 2, col = "blue") # Kernel Density Estimation
lines(density(x), lwd = 2, col = "blue") # Kernel Density Estimation
hist(x, breaks = 10, freq = F, col = "gray", main = "Histogram and density estimate",
xlab = "weight")
y <- x[1:40]
boxplot(y)
par(mfrow = c(1,1))
y <- x[1:40]
boxplot(y)
hist(y, xlim = c(80, max(y)), col = "pink", main = "Histogram of weight", xlab = "weight")
boxplot(y, horizontal = TRUE, outline = TRUE, ylim = c(80, max(y)), frame = F, col = "cadetblue1",
add = TRUE)
qqnorm(y)
qqnorm(y, main = "Normal Q-Q Plot of weight", xlab = "Theoretical Quantiles of weight",
ylab = "Sample Quantiles of weight")
qqline(y, col = "red", lwd = 2) # Addding theoretical line
par(mfrow = c(2, 2))
hist(x, main = "Histogram")
boxplot(x, main = "Boxplot", xlab = "x")
plot(density(x), type = "l", main = "Density", xlab = "x")
qqnorm(x)
hist(a, xlim = c(5, 18), ylim = c(0, 30), breaks = 10, col = rgb(1, 1, 0, 0.7), main = "",
xlab = "number")
production <- read.table("production.txt", header = TRUE)
production <- read.table("production.txt", header = TRUE)
setwd("C:/2017/Work/Github/Regression/Regression-Analysis-in-R/Simple Linear Regression")
production <- read.table("production.txt", header = TRUE)
production # look at dataset
summary(production[, 2:3])
plot(production$RunSize, production$RunTime, xlab = "Run Size", ylab = "Run Time")
par(mfrow = c(1,1))
plot(production$RunSize, production$RunTime, xlab = "Run Size", ylab = "Run Time")
plot(production$RunSize, production$RunTime, xlab = "Run Size", ylab = "Run Time", title("RunSize Vs. RunTime"))
m1 <- lm(RunTime ~ RunSize, data = production)
setwd("C:/2017/Work/Github/Regression/Regression-Analysis-in-R/Simple Linear Regression")
m1 <- lm(RunTime ~ RunSize, data = production)
production <- read.table("production.txt", header = TRUE)
m1 <- lm(RunTime ~ RunSize, data = production)
summary(m1) # Get regression results
data.frame(production, fitted.value = fitted(m1), residual = resid(m1))
tval = qt(1 - alpha/2, n - p)
tval = qt(1 - alpha/2, n - p)
alpha = 0.05
tval = qt(1 - alpha/2, n - p)
n= 20# no of sample
p = 2#no of estimators
tval = qt(1 - alpha/2, n - p)
tval
m1$coefficients
m1$fitted.values
m1$residuals
m1$df.residual
m1[4,1]
m1$rank
m1$model
tval
qt
lower = summary(m1)[4]$coefficients[2, 1] - tval * summary(m1)[4]$coefficients[2,
2]
upper = summary(m1)[4]$coefficients[2, 1] + tval * summary(m1)[4]$coefficients[2,
2]
c(lower, upper)
lower = summary(m1)[4]$coefficients[1, 1] - tval * summary(m1)[4]$coefficients[1,
2]
upper = summary(m1)[4]$coefficients[1, 1] + tval * summary(m1)[4]$coefficients[1,
2]
c(lower, upper)
confint(m1, level = 0.95)
(CI <- predict(m1, newdata = data.frame(RunSize = c(50, 100, 150, 200, 250, 300,
350)), interval = "confidence", level = 0.95))
(PI <- predict(m1, newdata = data.frame(RunSize = c(50, 100, 150, 200, 250, 300,
350)), interval = "prediction", level = 0.95))
plot(production$RunSize, production$RunTime, ylim = range(production$RunSize, PI))
matlines(c(50, 100, 150, 200, 250, 300, 350), CI, lty = c(1, 2, 2), lwd = 1.5, col = 1)
matlines(c(50, 100, 150, 200, 250, 300, 350), PI, lty = c(1, 3, 3), lwd = 1.5, col = 1)
plot(production$RunSize, production$RunTime, ylim = range(production$RunSize, PI))
matlines(c(50, 100, 150, 200, 250, 300, 350), CI, lty = c(1, 2, 2), lwd = 1.5, col = "blue")
matlines(c(50, 100, 150, 200, 250, 300, 350), PI, lty = c(1, 3, 3), lwd = 1.5, col = "red")
legend(b = "CI", r = "PI")
legend(b = "CI")
